'''
验证数据
'''

'''
在优化过程中，使用了超参数调优来选择能够带来更好结果的超参数，
但有一个问题需要注意：不应该使用测试数据集来检查不同的超参数。
如果这样做，实际上是在将模型手动优化到测试数据集上，从而使模型偏向于对这些数据过拟合，而测试数据集本应仅用于最终检查模型是否训练和泛化得当。
换句话说，如果我们调整网络的参数以适配测试数据，那么本质上就是在测试数据上优化网络，这是一种过拟合测试数据的方式

因此，使用测试数据集进行超参数调优是一个错误，测试数据集应仅作为未见过的数据，不应该以任何方式影响模型（超参数调优就是一种影响），测试数据集的唯一用途是评估性能。

超参数调优可以通过另一个被称为验证数据集的数据集来完成。测试数据集需要包含真实的样本外数据，但验证数据集在选择数据时有更多的自由。

如果有大量的训练数据，并且可以分出一部分用于验证，那么就可以将其视为样本外数据，类似于测试数据集。

如果面临数据不足的问题，无法从训练数据中在创建一个新的数据集，
在这种情况下有两种做法：

第一种是临时将训练数据分成一个较小的训练数据集和验证数据集，用于超参数调优，之后，使用最终确定的超参数集在所有得到训练数据上训练模型/
由于是根据从训练数据中分出的一部分验证数据来调整模型的，所以允许这样做。另外，仍然保留一个测试数据集，用于在训练后检查模型的性能

第二种是在数据不足时使用一种称为交叉验证的过程。交叉验证主要用于训练数据集很小，无法分出数据用于验证的情况。
其工作原理是将训练数据集分成若干部分，例如5份。然后在前4份数据上训练模型，在最后一份数据上验证，随后交换样本，在第1、2、3、5份数据上训练模型，在第4份数据上验证，
继续这样的操作，直到每一份都被用作验证集。通过这种方式不会丢失任何训练数据，使用未在每次迭代中用于训练的数据进行验证，并且相比仅仅临时划分训练数据集，可以在更多数据上进行验证。
这个方法被称为k折交叉验证，k表示划分数据的份数。
'''